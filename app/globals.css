@import 'tailwindcss';

@custom-variant dark (&:is(.dark *));

@theme {
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  --animate-pulse-fast: pulse-fast 1s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  --animate-pulse-slow: pulse-slow 3s ease-in-out infinite;
  --animate-shimmer: shimmer 3s linear infinite;
  --animate-glow: glow 2s ease-in-out infinite;
  --animate-highlight-glow: highlight-glow 3s ease-in-out infinite;
  --animate-rotate-slow: rotate-slow 10s linear infinite;
  --animate-halo-pulse: halo-pulse 3s ease-in-out infinite;
  --animate-float: float 3s ease-in-out infinite;
  --animate-appear: appear 0.5s cubic-bezier(0.26, 0.53, 0.74, 1.48);

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
  @keyframes pulse-fast {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.4;
    }
  }
  @keyframes pulse-slow {
    0%,
    100% {
      opacity: 0.9;
    }
    50% {
      opacity: 0.4;
    }
  }
  @keyframes shimmer {
    0% {
      background-position: -100% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }
  @keyframes glow {
    0%,
    100% {
      opacity: 0.8;
    }
    50% {
      opacity: 0.5;
    }
  }
  @keyframes highlight-glow {
    0% {
      box-shadow: 0 0 5px rgba(62, 207, 255, 0.3);
      border-color: rgba(62, 207, 255, 0.3);
    }
    50% {
      box-shadow: 0 0 20px rgba(62, 207, 255, 0.8);
      border-color: rgba(62, 207, 255, 0.8);
    }
    100% {
      box-shadow: 0 0 5px rgba(62, 207, 255, 0.3);
      border-color: rgba(62, 207, 255, 0.3);
    }
  }
  @keyframes rotate-slow {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  @keyframes halo-pulse {
    0%,
    100% {
      transform: scale(1);
      opacity: 0.6;
    }
    50% {
      transform: scale(1.1);
      opacity: 0.2;
    }
  }
  @keyframes float {
    0%,
    100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-3px);
    }
  }
  @keyframes appear {
    0% {
      opacity: 0;
      transform: scale(0.97);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  @keyframes command-item-click {
    0% {
      box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.05);
      border-color: rgba(255, 255, 255, 0.05);
    }
    15% {
      box-shadow: 0 0 20px 4px rgba(255, 255, 255, 0.1);
      border-color: rgba(255, 255, 255, 0.15);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
      border-color: rgba(255, 255, 255, 0.05);
    }
  }

  .glass-effect {
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(12px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
  }

  .glass-effect:hover {
    background: rgba(255, 255, 255, 0.04);
    border-color: rgba(255, 255, 255, 0.08);
  }

  .glass-effect .header {
    background: rgba(255, 255, 255, 0.03);
    border-bottom: 1px solid rgba(255, 255, 255, 0.08);
  }

  /* Style modifications for code with glass effect */
  .glass-effect pre,
  .glass-effect code,
  .glass-effect .shiki {
    background: transparent !important;
    backdrop-filter: none !important;
    box-shadow: none !important;
  }

  /* Add a subtle blue glow to code blocks for emphasis */
  .code-block-glow {
    box-shadow: 0 0 20px rgba(0, 150, 255, 0.05);
  }

  /* Create a better glass effect specifically for code blocks */
  .glass-code-content {
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.03) 0%,
      rgba(255, 255, 255, 0.02) 100%
    );
    border-radius: 0 0 0.5rem 0.5rem;
    background: transparent !important;
  }

  /* Forcefully remove all backgrounds from code elements */
  .glass-highlight,
  .glass-highlight *,
  .glass-highlight .shiki,
  .glass-highlight .shiki *,
  .glass-highlight pre,
  .glass-highlight code,
  .glass-highlight .line {
    background: transparent !important;
    background-color: transparent !important;
    box-shadow: none !important;
  }

  /* Additional styles to ensure code content shows up well on a transparent background */
  .glass-highlight .shiki {
    color: rgba(255, 255, 255, 0.9) !important;
  }

  /* Remove any box-shadow within code blocks that might give a gray appearance */
  .shiki,
  .shiki span,
  .shiki div {
    box-shadow: none !important;
    background: transparent !important;
  }

  /* Force all background colors in syntax highlighting to be transparent */
  [class*='mtk'],
  [class*='token'] {
    background: transparent !important;
  }

  /* Improve token visibility on glass background */
  .glass-effect .token.comment,
  .glass-effect .token.prolog,
  .glass-effect .token.doctype,
  .glass-effect .token.cdata {
    color: rgba(128, 147, 166, 0.8) !important;
  }

  .glass-effect .token.punctuation {
    color: rgba(192, 202, 212, 0.8) !important;
  }

  .glass-effect .token.property,
  .glass-effect .token.tag,
  .glass-effect .token.boolean,
  .glass-effect .token.number,
  .glass-effect .token.constant,
  .glass-effect .token.symbol {
    color: rgba(121, 182, 242, 0.9) !important;
  }

  .glass-effect .token.selector,
  .glass-effect .token.attr-name,
  .glass-effect .token.string,
  .glass-effect .token.char,
  .glass-effect .token.builtin {
    color: rgba(126, 231, 135, 0.9) !important;
  }

  .glass-effect .token.operator,
  .glass-effect .token.entity,
  .glass-effect .token.url,
  .glass-effect .language-css .token.string,
  .glass-effect .style .token.string {
    color: rgba(255, 203, 139, 0.9) !important;
  }

  .glass-effect .token.keyword {
    color: rgba(224, 108, 117, 0.9) !important;
  }

  .animate-command-item-click {
    animation: command-item-click 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  :root {
    color-scheme: dark;
    --surface: #151515;
    --surface-elevated: #1f1f1f;
    --primary: #5e6ad2;
    --primary-light: #8a94f0;
    --text: #ffffff;
    --text-secondary: rgba(255, 255, 255, 0.6);
    --border: rgba(255, 255, 255, 0.1);
    --radius: 0.5rem;
  }

  body {
    margin: 0;
    overflow: hidden;
    font-family:
      Inter,
      -apple-system,
      BlinkMacSystemFont,
      sans-serif;
    scroll-behavior: smooth;
  }

  input,
  textarea {
    background: transparent;
    color: var(--text);
    font-size: 14px;
    line-height: 1.5;
    transition: all 0.2s ease;
  }

  input:focus,
  textarea:focus {
    outline: none;
    background: rgba(255, 255, 255, 0.03);
  }

  .btn {
    padding: 6px 12px;
    border-radius: 6px;
    font-size: 13px;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .btn-primary {
    background: var(--primary);
    color: white;
  }

  .btn-primary:hover {
    background: var(--primary-light);
  }

  ::-webkit-scrollbar {
    width: 6px;
  }

  ::-webkit-scrollbar-track {
    background: transparent;
  }

  ::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.15);
  }

  .command-content {
    transition:
      opacity 0.2s ease,
      transform 0.2s ease;
  }

  .command-content-enter {
    opacity: 0;
    transform: translateY(10px);
  }

  .command-content-exit {
    opacity: 0;
    transform: translateY(-10px);
  }

  /* Updated shine effect for modern look */
  .dark {
    [cmdk-root]:after {
      content: '';
      background: linear-gradient(
        45deg,
        rgba(62, 207, 255, 0.03) 0%,
        rgba(62, 207, 255, 0.05) 25%,
        rgba(62, 207, 255, 0.1) 50%,
        rgba(62, 207, 255, 0.05) 75%,
        rgba(62, 207, 255, 0.03) 100%
      );
      z-index: -1;
      position: absolute;
      border-radius: 12px;
      top: -1px;
      left: -1px;
      width: calc(100% + 2px);
      height: calc(100% + 2px);
      animation: shine 3s ease infinite;
      background-size: 200% 200%;
    }

    [cmdk-item][data-selected='true']:after {
      content: '';
      position: absolute;
      inset: 0;
      border-radius: 8px;
      padding: 1px;
      background: linear-gradient(
        to right,
        rgba(62, 207, 255, 0.1),
        rgba(255, 255, 255, 0.1)
      );
      -webkit-mask:
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
      mask:
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
      -webkit-mask-composite: xor;
      mask-composite: exclude;
    }
  }

  /* Animations (added to global scope)*/

  @keyframes border {
    to {
      box-shadow: 0 0 0 1px var(--gray6); /* Using your existing --gray6 */
    }
  }
  @keyframes loadingDots {
    0% {
      content: '.';
    }
    33% {
      content: '..';
    }
    66% {
      content: '...';
    }
    100% {
      content: '.';
    }
  }

  .loading-dots::after {
    content: '.';
    display: inline-block;
    animation: loadingDots 1.5s infinite;
  }

  @keyframes showTopShine {
    to {
      opacity: 1;
    }
  }

  /* Loading animation, adapted for Tailwind */
  @keyframes loading {
    0% {
      opacity: 0;
      transform: translateX(0);
    }
    50% {
      opacity: 1;
      transform: translateX(100%);
    }
    100% {
      opacity: 0;
      transform: translateX(0);
    }
  }

  /* add these in if needed in components*/
  /*.cmdk-loading-placeholder, .cmdk-loading-spinner {}*/

  /* Added Keyframes */
  /* For consistency, I'm adding slideIn/slideOut here even if not used *yet*. */
  @keyframes slideIn {
    0% {
      opacity: 0;
      transform: scale(0.96);
    }

    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes slideOut {
    0% {
      opacity: 1;
      transform: scale(1);
    }

    100% {
      opacity: 0;
      transform: scale(0.96);
    }
  }

  /* Add additional custom variables as needed*/
  :root {
    /* ...other variables...*/
    --cmdk-shadow: 0 16px 70px rgb(0 0 0 / 20%); /* Example, might need adjustment */
  }

  /* Tailwind config or separate CSS file */
  @keyframes rotate-slow {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes halo-pulse {
    0% {
      transform: scale(1);
      opacity: 0.6;
    }
    50% {
      transform: scale(1.1);
      opacity: 0.8;
    }
    100% {
      transform: scale(1);
      opacity: 0.6;
    }
  }

  @keyframes pulse-slow {
    0% {
      opacity: 0.4;
    }
    50% {
      opacity: 0.7;
    }
    100% {
      opacity: 0.4;
    }
  }

  @keyframes shimmer {
    0% {
      background-position: 0% 50%;
    }
    100% {
      background-position: 100% 50%;
    }
  }

  @keyframes bounce-slow {
    0%,
    100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
  }

  @keyframes glow {
    0% {
      box-shadow: inset 0 0 8px rgba(255, 255, 255, 0.8);
    }
    50% {
      box-shadow: inset 0 0 12px rgba(255, 255, 255, 1);
    }
    100% {
      box-shadow: inset 0 0 8px rgba(255, 255, 255, 0.8);
    }
  }

  @keyframes float {
    0% {
      transform: translateY(0) translateX(0);
      opacity: 0.5;
    }
    50% {
      transform: translateY(-2px) translateX(1px);
      opacity: 0.7;
    }
    100% {
      transform: translateY(0) translateX(0);
      opacity: 0.5;
    }
  }

  /* Apply animation durations */
  .animate-rotate-slow {
    animation: rotate-slow 10s linear infinite;
  }
  .animate-halo-pulse {
    animation: halo-pulse 4s ease-in-out infinite;
  }
  .animate-pulse-slow {
    animation: pulse-slow 6s ease-in-out infinite;
  }
  .animate-shimmer {
    animation: shimmer 3s linear infinite;
  }
  .animate-bounce-slow {
    animation: bounce-slow 4s ease-in-out infinite;
  }
  .animate-glow {
    animation: glow 3s ease-in-out infinite;
  }
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }
}

@layer base {}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer utilities {
  /* Override code highlighter background */
  .shiki,
  .shiki *,
  pre[class*='language-'],
  code[class*='language-'],
  pre[class*='shiki'],
  code[class*='shiki'] {
    background: transparent !important;
    background-color: transparent !important;
  }

  /* Remove background from the root element */
  .glass-effect,
  .code-block-glow,
  .glass-code-content,
  .glass-highlight {
    --glass-bg: rgba(255, 255, 255, 0.02);
    --glass-border: rgba(255, 255, 255, 0.05);
    --glass-shadow: rgba(0, 0, 0, 0.1);
    background: var(--glass-bg) !important;
    border: 1px solid var(--glass-border) !important;
    backdrop-filter: blur(12px) !important;
  }

  /* Ensure root elements of glass containers are transparent */
  .glass-effect > div,
  .code-block-glow > div,
  .glass-code-content > div,
  .glass-highlight > div {
    background-color: transparent !important;
  }

  /* Ensure all child elements of glass containers are also transparent 
   while preserving foreground colors for syntax highlighting */
  .glass-effect > *,
  .code-block-glow > *,
  .glass-code-content > *,
  .glass-highlight > * {
    background-color: transparent !important;
  }

  /* Special rule to handle Shiki line backgrounds */
  .shiki .line {
    background: transparent !important;
  }

  /* Make line numbers more subtle */
  .shiki .line-number {
    color: rgba(255, 255, 255, 0.3) !important;
  }

  /* Special styles for Shiki span tokens */
  .glass-effect .shiki span[style],
  .code-block-glow .shiki span[style],
  .glass-highlight .shiki span[style] {
    background: transparent !important;
  }

  /* Add specific styling for Shiki tokens to enhance readability on glass backgrounds */
  .glass-effect .shiki span[style] {
    color: inherit;
  }

  .glass-effect .shiki .line {
    background: transparent !important;
  }

  .glass-effect .shiki .line:hover {
    background: rgba(255, 255, 255, 0.04) !important;
  }

  .glass-effect .shiki {
    background: transparent !important;
    color: rgba(255, 255, 255, 0.85) !important;
  }

  /* Colors for different syntax tokens optimized for glass background */
  .glass-effect .shiki .mtk1 {
    color: rgba(230, 237, 243, 0.85) !important;
  } /* Default text */
  .glass-effect .shiki .mtk2 {
    color: rgba(121, 184, 255, 0.85) !important;
  } /* Keywords, variables */
  .glass-effect .shiki .mtk3 {
    color: rgba(126, 231, 135, 0.85) !important;
  } /* Strings */
  .glass-effect .shiki .mtk4 {
    color: rgba(224, 108, 117, 0.85) !important;
  } /* Numbers, boolean */
  .glass-effect .shiki .mtk5 {
    color: rgba(209, 154, 102, 0.85) !important;
  } /* Function names */
  .glass-effect .shiki .mtk6 {
    color: rgba(180, 142, 173, 0.85) !important;
  } /* Classes, types */
  .glass-effect .shiki .mtk7 {
    color: rgba(127, 127, 127, 0.85) !important;
  } /* Comments */
  .glass-effect .shiki .mtk8 {
    color: rgba(255, 203, 139, 0.85) !important;
  } /* Operators */

  /* Enhanced command item styles to ensure hover effects work */
  [cmdk-item] {
    cursor: pointer !important;
    transition: all 0.2s ease !important;
    position: relative !important;
  }

  [cmdk-item]:hover {
    transform: translateY(-1px);
    background: rgba(255, 255, 255, 0.04) !important;
    backdrop-filter: blur(4px) !important;
  }

  [cmdk-item]:active {
    transform: translateY(1px);
  }

  /* Subtle shimmer animation for selected items */
  [cmdk-item][data-selected='true']::before {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(255, 255, 255, 0.03);
    pointer-events: none;
    border-radius: 0.375rem;
    backdrop-filter: blur(8px);
  }

  /* Enhanced glass effect styling */
  .glass-effect {
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(12px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
  }

  .glass-effect:hover {
    background: rgba(255, 255, 255, 0.04);
    border-color: rgba(255, 255, 255, 0.08);
  }

  .glass-effect .header {
    background: rgba(255, 255, 255, 0.03);
    border-bottom: 1px solid rgba(255, 255, 255, 0.08);
  }

  /* Enhanced Command Center styling */
  [cmdk-dialog] {
    animation: command-dialog-overlay 0.2s ease-out;
  }

  @keyframes command-dialog-overlay {
    0% {
      background: transparent;
    }
    100% {
      background: transparent;
    }
  }

  [cmdk-dialog] [cmdk-root] {
    animation: command-dialog-content 0.2s ease-out;
    transform-origin: center center;
  }

  @keyframes command-dialog-content {
    0% {
      opacity: 0;
      transform: scale(0.98);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  [cmdk-root] {
    position: relative;
  }

  [cmdk-root]:before {
    content: '';
    position: absolute;
    inset: 0;
    pointer-events: none;
    border-radius: 0.75rem;
    padding: 1px;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.02) 0%,
      rgba(255, 255, 255, 0.04) 50%,
      rgba(255, 255, 255, 0.02) 100%
    );
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0.6;
  }

  [cmdk-item] {
    position: relative;
    height: auto;
    transform-origin: center;
    transition: all 0.2s ease;
  }

  [cmdk-item]:hover {
    transform: translateY(-1px);
    background: rgba(255, 255, 255, 0.04) !important;
    backdrop-filter: blur(4px) !important;
  }

  [cmdk-item]:active {
    transform: translateY(1px);
  }

  /* Subtle shimmer animation for selected items */
  [cmdk-item][data-selected='true']::before {
    content: '';
    position: absolute;
    inset: 0;
    background: rgba(255, 255, 255, 0.03);
    pointer-events: none;
    border-radius: 0.375rem;
    backdrop-filter: blur(8px);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Common glassy UI styling */
.glass-panel {
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid rgba(255, 255, 255, 0.05);
  transition: all 0.2s ease;
}

.glass-panel:hover {
  background: rgba(255, 255, 255, 0.03);
}

.glass-border {
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.glass-border-hover:hover {
  border-color: rgba(255, 255, 255, 0.08);
}

.glass-item-hover:hover {
  background: rgba(255, 255, 255, 0.03);
}

.glass-text {
  color: rgba(255, 255, 255, 0.9);
}

.glass-text-secondary {
  color: rgba(255, 255, 255, 0.7);
}

.glass-text-tertiary {
  color: rgba(255, 255, 255, 0.5);
}

.glass-input {
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.05);
  color: rgba(255, 255, 255, 0.9);
}

.glass-input:focus {
  background: rgba(255, 255, 255, 0.03);
  border-color: rgba(255, 255, 255, 0.1);
}

/* Command Center Dialog styles */
[cmdk-dialog] {
  animation: command-dialog-overlay 0.2s ease-out;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 50;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
}

@keyframes command-dialog-overlay {
  0% {
    background: transparent;
  }
  100% {
    background: transparent;
  }
}

[cmdk-dialog] [cmdk-root] {
  animation: command-dialog-content 0.2s ease-out;
  max-width: 640px;
  width: 100%;
  background: rgba(255, 255, 255, 0.03);
  border: 1px solid rgba(255, 255, 255, 0.05);
  border-radius: 0.75rem;
  overflow: hidden;
  backdrop-filter: blur(12px);
}

@keyframes command-dialog-content {
  0% {
    opacity: 0;
    transform: scale(0.98);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

[cmdk-input] {
  border: none;
  width: 100%;
  font-size: 0.875rem;
  padding: 0.75rem 1rem;
  outline: none;
  background: transparent;
  color: rgba(255, 255, 255, 0.9);
}

[cmdk-input]::placeholder {
  color: rgba(255, 255, 255, 0.4);
}

[cmdk-item] {
  content-visibility: auto;
  cursor: pointer;
  height: auto;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  color: rgba(255, 255, 255, 0.8);
  user-select: none;
  will-change: background, color;
  transition: all 0.15s ease;
  position: relative;
  margin: 0.2rem 0;
}

[cmdk-item][data-selected="true"] {
  background: rgba(255, 255, 255, 0.05);
  color: rgba(255, 255, 255, 1);
}

[cmdk-item]:hover {
  background: rgba(255, 255, 255, 0.05);
  color: rgba(255, 255, 255, 1);
  backdrop-filter: blur(4px);
}

[cmdk-item]:active {
  background: rgba(255, 255, 255, 0.06);
  color: white;
}

[cmdk-group-heading] {
  user-select: none;
  font-size: 0.75rem;
  color: rgba(255, 255, 255, 0.6);
  padding: 0.5rem 0.75rem;
  display: flex;
  align-items: center;
}

/* Updated to remove "none" from backdrop-filter */
.glass-effect,
.glass-effect:hover,
.glass-item-hover:hover,
[cmdk-item]:hover,
[cmdk-item][data-selected="true"]::before {
  backdrop-filter: blur(12px);
}

/* Override existing animations */
@keyframes command-dialog-overlay {
  0%, 100% {
    background: transparent;
  }
}

/* Custom animation for the root element */
[cmdk-root]:before {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: 0.75rem;
  padding: 1px;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.02) 0%,
    rgba(255, 255, 255, 0.04) 50%,
    rgba(255, 255, 255, 0.02) 100%
  );
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0.7;
}

/* Dialog styling to match command center */
.glass-dialog:before {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: 0.75rem;
  padding: 1px;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.02) 0%,
    rgba(255, 255, 255, 0.04) 50%,
    rgba(255, 255, 255, 0.02) 100%
  );
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0.7;
}

/* Dialog animations */
@keyframes dialog-content-in {
  0% {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes dialog-content-out {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
}

.glass-dialog button {
  transition: all 0.2s ease;
}

.glass-dialog button:not([data-variant="primary"]):hover {
  background: rgba(255, 255, 255, 0.05);
}